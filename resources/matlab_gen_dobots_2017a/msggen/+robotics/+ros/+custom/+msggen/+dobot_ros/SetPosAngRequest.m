classdef SetPosAngRequest < robotics.ros.Message
    %SetPosAngRequest MATLAB implementation of dobot_ros/SetPosAngRequest
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2017 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'dobot_ros/SetPosAngRequest' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '24d5677522e4dd305f946525060d0833' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        BaseAngle
        RearArmAngle
        ForeArmAngle
    end
    
    properties (Constant, Hidden)
        PropertyList = {'BaseAngle', 'ForeArmAngle', 'RearArmAngle'} % List of non-constant message properties
        ROSPropertyList = {'base_angle', 'fore_arm_angle', 'rear_arm_angle'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = SetPosAngRequest(msg)
            %SetPosAngRequest Construct the message object SetPosAngRequest
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function baseangle = get.BaseAngle(obj)
            %get.BaseAngle Get the value for property BaseAngle
            baseangle = double(obj.JavaMessage.getBaseAngle);
        end
        
        function set.BaseAngle(obj, baseangle)
            %set.BaseAngle Set the value for property BaseAngle
            validateattributes(baseangle, {'numeric'}, {'nonempty', 'scalar'}, 'SetPosAngRequest', 'BaseAngle');
            
            obj.JavaMessage.setBaseAngle(baseangle);
        end
        
        function reararmangle = get.RearArmAngle(obj)
            %get.RearArmAngle Get the value for property RearArmAngle
            reararmangle = double(obj.JavaMessage.getRearArmAngle);
        end
        
        function set.RearArmAngle(obj, reararmangle)
            %set.RearArmAngle Set the value for property RearArmAngle
            validateattributes(reararmangle, {'numeric'}, {'nonempty', 'scalar'}, 'SetPosAngRequest', 'RearArmAngle');
            
            obj.JavaMessage.setRearArmAngle(reararmangle);
        end
        
        function forearmangle = get.ForeArmAngle(obj)
            %get.ForeArmAngle Get the value for property ForeArmAngle
            forearmangle = double(obj.JavaMessage.getForeArmAngle);
        end
        
        function set.ForeArmAngle(obj, forearmangle)
            %set.ForeArmAngle Set the value for property ForeArmAngle
            validateattributes(forearmangle, {'numeric'}, {'nonempty', 'scalar'}, 'SetPosAngRequest', 'ForeArmAngle');
            
            obj.JavaMessage.setForeArmAngle(forearmangle);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.BaseAngle = obj.BaseAngle;
            cpObj.RearArmAngle = obj.RearArmAngle;
            cpObj.ForeArmAngle = obj.ForeArmAngle;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.BaseAngle = strObj.BaseAngle;
            obj.RearArmAngle = strObj.RearArmAngle;
            obj.ForeArmAngle = strObj.ForeArmAngle;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.BaseAngle = obj.BaseAngle;
            strObj.RearArmAngle = obj.RearArmAngle;
            strObj.ForeArmAngle = obj.ForeArmAngle;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.dobot_ros.SetPosAngRequest.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.dobot_ros.SetPosAngRequest;
            obj.reload(strObj);
        end
    end
end
